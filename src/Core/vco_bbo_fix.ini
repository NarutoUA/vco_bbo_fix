[Core]
; // if 1, call game render every loop iteration (removes rendering lag on mouse movement):
; while(true) {
;	if (PeekMessage())
;		ProcessMessage()
;	Render()
; }
; // if 0, call game render only if no message received (original workflow):
; while(true) {
;	if(PeekMessage())
;		ProcessMessage()
;	else
;		Render()
; }
render_each_loop_iter=1

; // if 1, call PeekMessage in loop (original workflow, may increase lag):
; while(true) {
;	while (PeekMessage())
;		ProcessMessage()
;	Render()
; }
; // if 0, call PeekMessage only once per main loop iter (reduces lag):
; while(true) {
;	if(PeekMessage())
;		ProcessMessage()
;	Render()
; }
use_peekmessage_loop=0

; if loop_sleep_ms > 0 call Sleep(loop_sleep_ms) every frame, no Sleep call if zero:
; while(true) {
;	...
;	Render()
;	if (loop_sleep_ms)
;		Sleep(loop_sleep_ms)
; }
loop_sleep_ms=8

[MessageStackFix]
; if 1, ignore WM_NCHITTES event, it is generated by mouse movement and floods internal game message stack
; 0 is game default behavior
ignore_hittest_event=1

; if > 0, WM_MOUSEMOVE event is passed to internal game message handler X times per second which reduces lag
; if = 0, pass each WM_MOUSEMOVE event to message loop (original behavior)
mousemove_rate=30
